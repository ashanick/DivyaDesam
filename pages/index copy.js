import Head from 'next/head'
import fs from 'fs/promises'
import path from 'path'

import VillageCard from '../components/Cards/VillageCard'
import Banner from '../components/layout/Banner'
import Header from '../components/layout/Header'
import SampleCard from '../components/Cards/SampleCard'
import Footer from '../components/layout/Footer'
import LargeCard from '../components/Cards/LargeCard'

export default function Home(props) {
  const {members, villages} = props
  // console.log('Members 1: ', villages)
  return (
    <div>
      <Head>
        <title>Iyengars 1000+</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <Header /> */}
      <Banner />
      <div className='container'>
        <section className='pt-6'>
          <h1 className="h1">Sample Members</h1>
          <div className='flex space-x-5 overflow-x-scroll scroll-auto
            p-3 -ml-3 mx-auto'> 
            {
              members?.map(m=>(
                <SampleCard key={m.id} 
                  id={m.id}
                  imageURL={m.imageURL}
                  excerpt={m.excerpt}
                  />
              ))
            }
          </div>
        </section>
        
        <section className='pt-6 grid grid-cols-1 md:grid-cols-2 space-x-5 mb-5'>
          <div className="p-2">
            <h2 className='h2'>Genesis: New York, 2017</h2> 
            <p>Aditya, my son, was intrigued by the fact that Nicky, my husband and I, had many common relatives. Understandably, these relationships do
              not show up in a single family tree. Hence we began to think about collating and categorizing the information as a network. 
              We decided to draw links back to the ancestral villages, to give us something in common to connect to. In the near future, I do hope
                to have village zooms, that can bring us closer together. </p>
            
            <p className="mt-2">Today, 1000+, and growing, is a compendium of Iyengars, including non-Iyengars, and non-Indians married or born to an Iyengar. 
                I draw pool of information across different family trees, try to go the basic information provided on ancestry or genie. We cover: 
            </p>
            <ul className="mt-2">
              <div className="px-5">
                <li>&rarr; 8+ generations from 1700 AD</li>
                <li>&rarr; Immortalize funny, fascinating, amazing, endearing, and inspiring memories</li>
                <li>&rarr; Individal details</li>
                <li>&rarr; Tagged memory and photo stories</li>
                <li>&rarr; Clans of 5+ generations </li>
                <li>&rarr; Search connections between any 2 people</li>
              </div>
            </ul>
          </div>
          <div className="p-2">
            <h2 className="h2">
              Ancestral Villages Covered</h2>
            <div className='grid grid-cols-2 md:grid-cols-3lg:grid-cols-4
              xl:grid-cols-3 
            '>
              {
              villages?.map(v=>(
                <VillageCard key={v.id}
                id={v.id}
                imageURL={v.imageURL} 
                descendants={v.descendants}/>
              ))
              }
            </div>
          </div>
        </section>

      </div>
    </div>
  )
}

export async function getStaticProps(){
  const filePath = path.join(process.cwd(), 'data', 'sample.json')
  const jsonData = await fs.readFile(filePath)
  const data = JSON.parse(jsonData)

  const filePathv = path.join(process.cwd(), 'data', 'villages.json')
  const jsonDatav = await fs.readFile(filePathv)
  const datav = JSON.parse(jsonDatav)
  // console.log('Villages : ', datav)
  return {
    props: {
      members: data.members,
      villages: datav.villages
    }
  }
}
